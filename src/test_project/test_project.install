<?php
/**
 * @file
 * Install, update and uninstall functions for Test Project installation profile.
 */

use Drupal\shortcut\Entity\Shortcut;
use Drupal\user\Entity\User;
use Drupal\user\RoleInterface;

/**
 * Implements hook_install().
 *
 * Performs actions to set up the site for this profile.
 *
 * @see system_install()
 */
function test_project_install() {
  $config_factory = \Drupal::configFactory();

  // Allow visitor account creation with administrative approval.
  $user_settings = $config_factory->getEditable('user.settings');
  $user_settings
    ->set('register', USER_REGISTER_ADMINISTRATORS_ONLY)
    ->save(TRUE); 

  // Disable the user pictures on nodes.
  $config_factory->getEditable('system.theme.global')
    ->set('features.node_user_picture', FALSE)
    ->save(TRUE);

  // Assign user 1 the "administrator" role.
  $user = User::load(1);
  $user->roles[] = 'administrator';
  $user->save();

  // Allow authenticated users to use shortcuts.
  user_role_grant_permissions(RoleInterface::AUTHENTICATED_ID, ['access shortcuts']);

  // Populate the default shortcut set.
  $shortcut = Shortcut::create([
    'shortcut_set' => 'default',
    'title' => t('Add content'),
    'weight' => -20,
    'link' => ['uri' => 'internal:/node/add'],
  ]);
  $shortcut->save();

  // Enable the admin theme for content create/edit pages.
  $config_factory->getEditable('node.settings')
    ->set('use_admin_theme', TRUE)
    ->save(TRUE);

  // Rebuild user entity form display for new fields.
  $storage = \Drupal::entityTypeManager()->getStorage('entity_form_display');
  /** @var \Drupal\Core\Entity\Display\EntityFormDisplayInterface $user_form_display */
  $user_form_display = $storage->load('user.user.default');
  if (!$user_form_display) {
    $user_form_display = $storage->create([
      'targetEntityType' => 'user',
      'bundle' => 'user',
      'mode' => 'default',
      'status' => TRUE,
    ]);
  }
  $user_form_display
    ->removeComponent('language')
    ->removeComponent('timezone')
    ->removeComponent('user_picture')
    ->save();
  
  // Ensure the translation fields are created in the database.
  \Drupal::service('entity.definition_update_manager')->applyUpdates();
}

